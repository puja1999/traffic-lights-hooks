{"version":3,"sources":["components/Light.jsx","components/TrafficLight.jsx","App.js","reportWebVitals.js","index.js"],"names":["Light","color","active","className","style","backgroundColor","opacity","lightDurations","TrafficLight","useState","colorIndex","setColorIndex","useEffect","timer","setTimeout","clearTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NASeA,EAPD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OACZ,qBACEC,UAAU,SACVC,MAAO,CAAEC,gBAAiBJ,EAAOK,QAASJ,EAAS,EAAI,OCFrDK,EAAiB,CAAC,IAAM,IAAM,KAuBrBC,EArBM,WAAO,IAAD,EACWC,mBAAS,GADpB,mBAClBC,EADkB,KACNC,EADM,KAYzB,OATAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,GAAeD,EAAa,GAAK,KAChCH,EAAeG,IAClB,OAAO,WACLK,aAAaF,OAKf,sBAAKV,UAAU,gBAAf,UACE,cAAC,EAAD,CAAOF,MAAM,OAAOC,OAAuB,IAAfQ,IAC5B,cAAC,EAAD,CAAOT,MAAM,OAAOC,OAAuB,IAAfQ,IAC5B,cAAC,EAAD,CAAOT,MAAM,OAAOC,OAAuB,IAAfQ,QCTnBM,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCKSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.75d68133.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Light = ({ color, active }) => (\r\n  <div\r\n    className=\"signal\"\r\n    style={{ backgroundColor: color, opacity: active ? 1 : 0.3 }}\r\n  />\r\n);\r\n\r\nexport default Light;","import React, { useState, useEffect } from \"react\";\r\nimport Light from \"./Light\";\r\n\r\nconst lightDurations = [3000, 2000, 1000];\r\n\r\nconst TrafficLight = () => {\r\n  const [colorIndex, setColorIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setColorIndex((colorIndex + 1) % 3);\r\n    }, lightDurations[colorIndex]);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"traffic-light\">\r\n      <Light color=\"#f00\" active={colorIndex === 0} />\r\n      <Light color=\"#ff0\" active={colorIndex === 2} />\r\n      <Light color=\"#0c0\" active={colorIndex === 1} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrafficLight;\r\n","import React from 'react';\nimport './App.css';\nimport TrafficLight from './components/TrafficLight';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TrafficLight />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}